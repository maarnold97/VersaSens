#include "pinctrl.dtsi"

&spi3 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    pinctrl-0 = <&spi_master>;
    pinctrl-names = "default";
};

&i2c2 {
    status = "okay";
    compatible = "nordic,nrf-twim";
    pinctrl-0 = <&i2c_master>;
};

&i2c1 {
    status = "disabled";
};


&uart1 {
    status = "disabled";
    compatible = "nordic,nrf-uarte";
};

/ {
	chosen {
		nordic,pm-ext-flash = &mx25r64;
	};
};

&pdm0 {
    status = "okay";
    compatible = "nordic,nrf-pdm";
    pinctrl-0 = <&pdm_clk>;
};

&spi4 {
    status = "okay";
    compatible = "nordic,nrf-spim";
    cs-gpios = <&gpio0 11 GPIO_ACTIVE_LOW>;

    pinctrl-0 = <&spi_sd>;

    sdhc0: sdhc@0 {
            compatible = "zephyr,sdhc-spi-slot";
            reg = <0>;
            status = "okay";
            mmc {
                compatible = "zephyr,sdmmc-disk";
                status = "okay";
            };
            spi-max-frequency = <8000000>;
    };
};

&gpio_fwd {
    status = "disabled";
};

&usbd {
    cdc_acm_uart0: cdc_acm_uart0 {
		status = "okay";
        compatible = "zephyr,cdc-acm-uart";
        label = "CDC_ACM_0";
    };
};


&spi0 {
    status = "okay";
    compatible = "nordic,nrf-spis";
    pinctrl-0 = <&spi_heepo>;
    pinctrl-names = "default";
    def-char = <0x00>;
};

&uart0 {
    status = "disabled";
};

/ {
	pwmleds {
        compatible = "pwm-leds";

        ledred: pwm_led_0 {
            pwms = <&pwm0 0 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
        };

        ledgreen: pwm_led_1 {
            pwms = <&pwm0 1 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
        };

        ledyellow: pwm_led_2 {
            pwms = <&pwm0 2 PWM_MSEC(20) PWM_POLARITY_INVERTED>;
        };
    };
};

&pinctrl {
    pwm0_default: pwm0_default {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 0, 27)>,  // e.g., P0.28 for LED 0
                    <NRF_PSEL(PWM_OUT1, 1, 7)>,  // P0.29 for LED 1
                    <NRF_PSEL(PWM_OUT2, 0, 12)>;  // P0.30 for LED 2
        };
    };

    pwm0_sleep: pwm0_sleep {
        group1 {
            psels = <NRF_PSEL(PWM_OUT0, 0, 27)>,
                    <NRF_PSEL(PWM_OUT1, 1, 7)>,
                    <NRF_PSEL(PWM_OUT2, 0, 12)>;
            low-power-enable;
        };
    };
};
